" +-------+
" | vimrc |
" +-------+

set nocompatible
filetype off

let g:my_vim_dir = fnamemodify(expand('$VIM'), ':h:h')

function MyVimFile(path)
  return g:my_vim_dir.'/'.a:path
endfunction

" Runtimepath initialization

let s:my_plugin_list = '/run/current-system/sw/share/vim-plugins/annoying.rtp'

let s:combined_vim = []
let s:combined_vim += [ MyVimFile('pre') ]
let s:combined_vim += systemlist('ls -d ~/vim-bundle/bundle/*')
if system('uname -a') =~ 'NixOS'
  let s:combined_vim += readfile(s:my_plugin_list)
endif
let s:combined_vim += [MyVimFile('post') ]

let s:combined_vim_after = []
for dir in s:combined_vim
  call add(s:combined_vim_after, dir.'/after')
endfor

let s:rtp = s:combined_vim + [expand('$VIMRUNTIME')] + s:combined_vim_after
let &rtp = join(s:rtp, ',')

" Source actual configuration

for f in split(glob(g:my_vim_dir . 'vimrc.d/lib/*'))
  exec 'source '.f
endfor

for modules in split(glob(MyVimFile('vimrc.d/modules.*')))
  for module in split(glob(modules.'/*.vim'))
    exec 'source '.module
  endfor
endfor

" Allow for project-specific options/mappings

if filereadable('local.vim')
  source local.vim
endif

filetype plugin indent on

